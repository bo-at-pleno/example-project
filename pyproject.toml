[tool.poetry]
name = "pleno-proj"
version = "0.1.0"
description = "Pleno project example description"
authors = ["Pleno Devs"]
license = "Proprietary, all rights reserved."
readme = "README.md"
packages = [{include = "pleno_common"}]

[[tool.poetry.source]]
name = "pleno"
url = "https://pleno-pypi.bolu.dev/pypi/simple"
default = true
secondary = true

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
PyYAML = ">=5.0"
injector = ">=0.20.1"
numpy = ">=1.20.3"
pandas = ">=1.4.0"
importlib-resources = "^5.9.0"
pleno-common = {version = "^0.0.7", source = "pleno"}

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
m2r2 = "^0.3.3"
Sphinx = "^5.2.2"
pytest = "^7.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 105
target-version=["py38", "py39", "py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
# The following are specific to Black, you probably don't want those.
    | blib2to3
    | tests/data
    | profiling
 )/
'''

[tool.mypy]
ignore_missing_imports = true
warn_no_return = false
warn_redundant_casts = true
disallow_untyped_defs = true
exclude = ['legacy']

[tool.isort]
profile = "black"
known_first_party = "pleno_common"
known_third_party = "numpy,pandas,pyyaml,pillow,injector,matplotlib,setuptools,scikit_image,scipy,importlib_resources,tables"
known_standard_library = "contextlib,enum,functools,inspect,logging,os,sys,typing,unittest,unittest.mock"
known_tests = "tests"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,TESTS,LOCALFOLDER"
add_imports = ['from __future__ import annotations']